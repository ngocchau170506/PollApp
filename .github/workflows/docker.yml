name: CI/CD Pipeline for PollApp 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Set up Node.js (Tùy chọn)
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies (Tùy chọn)
        run: npm install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Build and Push Docker image 
        uses: docker/build-push-action@v5 
        with:
          context: . 
          push: true 
          tags: ngocchau1705/pollapp:latest 

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu 
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }} 
          script: |
            PROJECT_DIR="/home/ubuntu/PollApp" 
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Cloning repository to $PROJECT_DIR"
              git clone https://github.com/ngocchau170506/PollApp.git "$PROJECT_DIR" 
            fi
            cd "$PROJECT_DIR"
            
            echo "Stopping and removing old containers..."
            sudo docker compose down || true 
            
            echo "Pulling new Docker image..."
            sudo docker pull ngocchau1705/pollapp:latest 
            
            echo "Starting new containers..."
            sudo docker compose up -d 
            
            echo "Pruning unused Docker images..."
            sudo docker image prune -f 

      - name: Send notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "Pipeline completed successfully! "
            echo "Deployment ready for PollApp" 
          else
            echo "Pipeline failed!"
            echo "Please check the logs for issues"
          fi

      - name: Generate deployment report
        if: success()
        run: |
          echo "Deployment Report" > deployment-report.txt
          echo "===================" >> deployment-report.txt
          echo "Date: $(date)" >> deployment-report.txt
          echo "Branch: ${{ github.ref_name }}" >> deployment-report.txt
          echo "Commit: ${{ github.sha }}" >> deployment-report.txt
          echo "Author: ${{ github.actor }}" >> deployment-report.txt
          echo "Status: SUCCESS" >> deployment-report.txt
          echo "" >> deployment-report.txt
          echo "Image pushed to Docker Hub" >> deployment-report.txt
          echo "Deployed to EC2 successfully" >> deployment-report.txt
